{"version":3,"sources":["components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","_jsx","className","concat","classes","card","children","CartItem","dispatch","useDispatch","_props$item","total","_jsxs","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","Fragment","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fetchData","cartData","wrap","_context2","prev","next","_ref2","_callee","response","data","_context","fetch","sent","ok","Error","json","abrupt","stop","apply","arguments","t0","_x","_ref3","_callee4","sendRequest","_context4","_ref4","_callee3","_context3","method","body","JSON","stringify","_x2","sendCartData","_Fragment","createRoot","document","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.d1bc5df5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__tr5EA\",\"price\":\"ProductItem_price__KC-aK\",\"actions\":\"ProductItem_actions__1GWFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__kTvCY\",\"error\":\"Notification_error__14gUn\",\"success\":\"Notification_success__O47yL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__cTYqy\",\"badge\":\"CartButton_badge__1rjg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1woGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__14gW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2mjaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2rMCU\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    // totalAmount: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      // action -> extra information\r\n      const newItem = action.payload; //payload -> object discribing the item\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    }, //action method\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    }, //action method\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport  cartSlice from \"./cart-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\nimport classes from \"./CartItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, quantity, total, price } = props.item;\n\n  const addItemHandler = () => {\n  dispatch(cartActions.addItemToCart({id, title, price}))\n  };\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id:item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  // const cart = useSelector(state => state.cart)\n  const dispatch = useDispatch();\n  const {  title, price, description,id } = props;\n\n  // const addToCartHandler = dispatch(\n  //   cartActions.addItemToCart({\n  //     id, //modern js shortcut id:id it will be expanded behind the scenes\n  //     title,\n  //     price,\n  //   })\n  // );\n\n  const addToCartHandler = () => {\n    // const newTotalQuantity = cart.totalQuantity + 1;\n\n    // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    // const existingItem = updatedItems.find((item) => item.id === id);\n    // if (existingItem) {\n    //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    //   updatedItem.quantity++;\n    //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n    //   const existingItemIndex = updatedItems.findIndex(\n    //     (item) => item.id === id\n    //   );\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems.push({\n    //     id: id,\n    //     price: price,\n    //     quantity: 1,\n    //     totalPrice: price,\n    //     name: title,\n    //   });\n    // }\n\n    // const newCart = {\n    //   totalQuantity: newTotalQuantity,\n    //   items: updatedItems,\n    // };\n\n    // dispatch(cartActions.replaceCart(newCart));\n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"The first book I ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"My Second Book\",\n    description: \"The second book I ever wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\n// import { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     // dispatch(\n  //     //   uiActions.showNotification({\n  //     //     status: \"pending\",\n  //     //     title: \"Sending...\",\n  //     //     message: \"Sending Cart data\",\n  //     //   })\n  //     // );\n  //     // const response = await fetch(\n  //     //   \"https://redux-advanced-4462a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n  //     //   { method: \"PUT\", body: JSON.stringify(cart) }\n  //     // ); //PUT will override existing data\n  //     // if (!response.ok) {\n  //     //   throw new Error(\"Sending Cart data failed.\");\n  //     // }\n  //     // dispatch(\n  //     //   uiActions.showNotification({\n  //     //     status: \"success\",\n  //     //     title: \"Success!\",\n  //     //     message: \"Sent Cart data successfully!\",\n  //     //   })\n  //     // );\n  //   };\n\n  //   if (isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   sendCartData().catch((error) => {}); //catch any errors that might be thrown from inside this function\n  // }, [cart, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-advanced-4462a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch cart data!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Fetching Cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  //this is not a reducer, it's a separate standalone JavaScript function instead\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending Cart data\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-advanced-4462a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      ); //PUT will override existing data\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending Cart data failed.\");\r\n      }\r\n    };\r\n\r\n    /* \r\n      We can use a function (this action creator function) that returns another function, as an action as well.    \r\n      */\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!\",\r\n          message: \"Sent Cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending Cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //Provider props provides redux store to entire aplication\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__196aY\",\"details\":\"CartItem_details__165ff\",\"quantity\":\"CartItem_quantity__1FRrR\",\"price\":\"CartItem_price__27qQM\",\"itemprice\":\"CartItem_itemprice__rw57W\",\"actions\":\"CartItem_actions__qMsmV\"};"],"sourceRoot":""}