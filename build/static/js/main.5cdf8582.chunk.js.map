{"version":3,"sources":["components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","index.js","components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","reducers","toggle","state","uiActions","actions","cartSlice","items","totalQuantity","replaceCart","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","_jsx","className","concat","classes","card","children","CartItem","dispatch","useDispatch","_props$item","total","_jsxs","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","Fragment","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","App","showCart","useEffect","fetch","method","body","JSON","stringify","createRoot","document","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.5cdf8582.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__cTYqy\",\"badge\":\"CartButton_badge__1rjg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1woGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__14gW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2mjaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2rMCU\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    // totalAmount: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) { // action -> extra information\r\n      const newItem = action.payload; //payload -> object discribing the item\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    }, //action method\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    }, //action method\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport  cartSlice from \"./cart-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\nimport classes from \"./CartItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, quantity, total, price } = props.item;\n\n  const addItemHandler = () => {\n  dispatch(cartActions.addItemToCart({id, title, price}))\n  };\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id:item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  // const cart = useSelector(state => state.cart)\n  const dispatch = useDispatch();\n  const {  title, price, description,id } = props;\n\n  // const addToCartHandler = dispatch(\n  //   cartActions.addItemToCart({\n  //     id, //modern js shortcut id:id it will be expanded behind the scenes\n  //     title,\n  //     price,\n  //   })\n  // );\n\n  const addToCartHandler = () => {\n    // const newTotalQuantity = cart.totalQuantity + 1;\n\n    // const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    // const existingItem = updatedItems.find((item) => item.id === id);\n    // if (existingItem) {\n    //   const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    //   updatedItem.quantity++;\n    //   updatedItem.totalPrice = updatedItem.totalPrice + price;\n    //   const existingItemIndex = updatedItems.findIndex(\n    //     (item) => item.id === id\n    //   );\n    //   updatedItems[existingItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems.push({\n    //     id: id,\n    //     price: price,\n    //     quantity: 1,\n    //     totalPrice: price,\n    //     name: title,\n    //   });\n    // }\n\n    // const newCart = {\n    //   totalQuantity: newTotalQuantity,\n    //   items: updatedItems,\n    // };\n\n    // dispatch(cartActions.replaceCart(newCart));\n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"The first book I ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"My Second Book\",\n    description: \"The second book I ever wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    fetch(\n      \"https://redux-advanced-4462a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n      { method: \"PUT\", body: JSON.stringify(cart) }\n    ); //PUT will override existing data\n  }, [cart]);\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //Provider props provides redux store to entire aplication\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__196aY\",\"details\":\"CartItem_details__165ff\",\"quantity\":\"CartItem_quantity__1FRrR\",\"price\":\"CartItem_price__27qQM\",\"itemprice\":\"CartItem_itemprice__rw57W\",\"actions\":\"CartItem_actions__qMsmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__tr5EA\",\"price\":\"ProductItem_price__KC-aK\",\"actions\":\"ProductItem_actions__1GWFB\"};"],"sourceRoot":""}